/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ValidatorManager,
  ValidatorManagerInterface,
} from "../../contracts/ValidatorManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "validators",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "addValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getValidators",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "hasSupermajority",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "removeValidator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "validateSignature",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ethSignedMessageHash",
        type: "bytes32",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "validateUniqueSignatures",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "validatorsCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000c5a38038062000c5a833981016040819052620000349162000143565b60005b815181101562000084576200006e8282815181106200005a576200005a62000215565b60200260200101516200008c60201b60201c565b50806200007b816200022b565b91505062000037565b505062000253565b60006200009a8183620000a0565b92915050565b6000620000b7836001600160a01b038416620000be565b9392505050565b600081815260018301602052604081205462000107575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556200009a565b5060006200009a565b634e487b7160e01b600052604160045260246000fd5b80516001600160a01b03811681146200013e57600080fd5b919050565b600060208083850312156200015757600080fd5b82516001600160401b03808211156200016f57600080fd5b818501915085601f8301126200018457600080fd5b81518181111562000199576200019962000110565b8060051b604051601f19603f83011681018181108582111715620001c157620001c162000110565b604052918252848201925083810185019188831115620001e057600080fd5b938501935b828510156200020957620001f98562000126565b84529385019392850192620001e5565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000600182016200024c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6109f780620002636000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80637947c3fa1161005b5780637947c3fa146100ee578063b7ab4db514610101578063ed612f8c14610116578063facd743b1461012c57600080fd5b8063333daf921461008d5780633e99d941146100b557806340a141ff146100c85780634d238c8e146100db575b600080fd5b6100a061009b366004610781565b61013f565b60405190151581526020015b60405180910390f35b6100a06100c33660046107c8565b610161565b6100a06100d63660046107e1565b610188565b6100a06100e93660046107e1565b610194565b6100a06100fc36600461080a565b6101a0565b610109610296565b6040516100ac91906108d9565b61011e6102a7565b6040519081526020016100ac565b6100a061013a3660046107e1565b6102b3565b60008061014c84846102bf565b9050610157816102b3565b9150505b92915050565b600061016b6102a7565b61017690600261093c565b61018183600361093c565b1192915050565b600061015b81836102e9565b600061015b8183610305565b600080805b835181101561028b5760006101dc8583815181106101c5576101c5610953565b6020026020010151876102bf90919063ffffffff16565b9050826001600160a01b0316816001600160a01b03161161025e5760405162461bcd60e51b815260206004820152603160248201527f5369676e617475726573206d75737420626520756e6971756520616e6420696e6044820152701034b731b932b0b9b4b7339037b93232b960791b60648201526084015b60405180910390fd5b610267816102b3565b610277576000935050505061015b565b91508061028381610969565b9150506101a5565b506001949350505050565b60606102a2600061031a565b905090565b60006102a26000610327565b600061015b8183610331565b6000806000806102cf8686610353565b9250925092506102df82826103a0565b5090949350505050565b60006102fe836001600160a01b03841661045d565b9392505050565b60006102fe836001600160a01b038416610550565b606060006102fe8361059f565b600061015b825490565b6001600160a01b038116600090815260018301602052604081205415156102fe565b6000806000835160410361038d5760208401516040850151606086015160001a61037f888285856105fb565b955095509550505050610399565b50508151600091506002905b9250925092565b60008260038111156103b4576103b4610982565b036103bd575050565b60018260038111156103d1576103d1610982565b036103ef5760405163f645eedf60e01b815260040160405180910390fd5b600282600381111561040357610403610982565b036104245760405163fce698f760e01b815260048101829052602401610255565b600382600381111561043857610438610982565b03610459576040516335e2f38360e21b815260048101829052602401610255565b5050565b60008181526001830160205260408120548015610546576000610481600183610998565b855490915060009061049590600190610998565b90508082146104fa5760008660000182815481106104b5576104b5610953565b90600052602060002001549050808760000184815481106104d8576104d8610953565b6000918252602080832090910192909255918252600188019052604090208390555b855486908061050b5761050b6109ab565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061015b565b600091505061015b565b60008181526001830160205260408120546105975750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561015b565b50600061015b565b6060816000018054806020026020016040519081016040528092919081815260200182805480156105ef57602002820191906000526020600020905b8154815260200190600101908083116105db575b50505050509050919050565b600080807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a084111561063657506000915060039050826106c0565b604080516000808252602082018084528a905260ff891692820192909252606081018790526080810186905260019060a0016020604051602081039080840390855afa15801561068a573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166106b6575060009250600191508290506106c0565b9250600091508190505b9450945094915050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610709576107096106ca565b604052919050565b600082601f83011261072257600080fd5b813567ffffffffffffffff81111561073c5761073c6106ca565b61074f601f8201601f19166020016106e0565b81815284602083860101111561076457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561079457600080fd5b82359150602083013567ffffffffffffffff8111156107b257600080fd5b6107be85828601610711565b9150509250929050565b6000602082840312156107da57600080fd5b5035919050565b6000602082840312156107f357600080fd5b81356001600160a01b03811681146102fe57600080fd5b6000806040838503121561081d57600080fd5b8235915060208084013567ffffffffffffffff8082111561083d57600080fd5b818601915086601f83011261085157600080fd5b813581811115610863576108636106ca565b8060051b6108728582016106e0565b918252838101850191858101908a84111561088c57600080fd5b86860192505b838310156108c8578235858111156108aa5760008081fd5b6108b88c89838a0101610711565b8352509186019190860190610892565b809750505050505050509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561091a5783516001600160a01b0316835292840192918401916001016108f5565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761015b5761015b610926565b634e487b7160e01b600052603260045260246000fd5b60006001820161097b5761097b610926565b5060010190565b634e487b7160e01b600052602160045260246000fd5b8181038181111561015b5761015b610926565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220e258f1ef118c8e883494fc8412fb43429f8b684fcb90d8f0f31a281d9ac0cd3364736f6c63430008140033";

type ValidatorManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ValidatorManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ValidatorManager__factory extends ContractFactory {
  constructor(...args: ValidatorManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    validators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(validators, overrides || {});
  }
  override deploy(
    validators: AddressLike[],
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(validators, overrides || {}) as Promise<
      ValidatorManager & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ValidatorManager__factory {
    return super.connect(runner) as ValidatorManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ValidatorManagerInterface {
    return new Interface(_abi) as ValidatorManagerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ValidatorManager {
    return new Contract(address, _abi, runner) as unknown as ValidatorManager;
  }
}

#[cfg(test)]
mod tests {
    use evm_assembly::EvmAssemblyGenerator;
    use evm_assembly::EvmByteCodeBuilder;

    #[test]
    fn blah() {
        let bytes = hex::decode("608060405234801561001057600080fd5b50600436106100365760003560e01c8063a9ccdd3f1461003b578063c1fb13d91461006b575b600080fd5b61005560048036038101906100509190610281565b61009b565b6040516100629190610364565b60405180910390f35b61008560048036038101906100809190610386565b6101a7565b6040516100929190610364565b60405180910390f35b60608173ffffffffffffffffffffffffffffffffffffffff16306040516024016100c591906103d5565b6040516020818303038152906040527f44df8e70000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161014f919061042c565b6000604051808303816000865af19150503d806000811461018c576040519150601f19603f3d011682016040523d82523d6000602084013e610191565b606091505b50505061019e84846101a7565b90509392505050565b6060600082846101b79190610472565b90506000816040516020016101cc91906104b5565b6040516020818303038152906040529050809250505092915050565b600080fd5b6000819050919050565b610200816101ed565b811461020b57600080fd5b50565b60008135905061021d816101f7565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061024e82610223565b9050919050565b61025e81610243565b811461026957600080fd5b50565b60008135905061027b81610255565b92915050565b60008060006060848603121561029a576102996101e8565b5b60006102a88682870161020e565b93505060206102b98682870161020e565b92505060406102ca8682870161026c565b9150509250925092565b600081519050919050565b600082825260208201905092915050565b60005b8381101561030e5780820151818401526020810190506102f3565b60008484015250505050565b6000601f19601f8301169050919050565b6000610336826102d4565b61034081856102df565b93506103508185602086016102f0565b6103598161031a565b840191505092915050565b6000602082019050818103600083015261037e818461032b565b905092915050565b6000806040838503121561039d5761039c6101e8565b5b60006103ab8582860161020e565b92505060206103bc8582860161020e565b9150509250929050565b6103cf81610243565b82525050565b60006020820190506103ea60008301846103c6565b92915050565b600081905092915050565b6000610406826102d4565b61041081856103f0565b93506104208185602086016102f0565b80840191505092915050565b600061043882846103fb565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061047d826101ed565b9150610488836101ed565b92508282019050808211156104a05761049f610443565b5b92915050565b6104af816101ed565b82525050565b60006020820190506104ca60008301846104a6565b9291505056fea2646970667358221220d7ed7319b06864d6caf4bc944b61a4857ad7ac511b97f4e8fd2b347ec5d4ea2f64736f6c63430008140033").unwrap();
        let builder = EvmByteCodeBuilder::from_bytes(bytes);

        println!("{}", builder.generate_evm_assembly());
        assert!(false);
    }
}
